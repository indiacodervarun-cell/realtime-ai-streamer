steps:
# Step 1: Build the Docker image
# This step remains the same. The Dockerfile will NOT copy the secret file.
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/realtime-ai-streamer:${_BUILD_TAG}',
    '.'
  ]
# Step 2: Push the Docker image to Container Registry
# This step remains the same.
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'gcr.io/$PROJECT_ID/realtime-ai-streamer:${_BUILD_TAG}'
  ]

# Step 3: Deploy to Cloud Run
# - The '--set-env-vars' argument now passes the SECRET_ID and PROJECT_ID.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: [
    'run',
    'deploy',
    'realtime-ai-streamer',
    '--image', 'gcr.io/$PROJECT_ID/realtime-ai-streamer:${_BUILD_TAG}',
    '--region', 'us-central1',
    '--platform', 'managed',
    '--allow-unauthenticated', # Keep this for initial testing
    '--port', '8080',
    # Key changes here:
    '--set-env-vars', 'GEMINI_API_KEY=${_GEMINI_API_KEY},FIREBASE_SERVICE_ACCOUNT_KEY_ID=firebase-service-account-key,GCP_PROJECT_ID=$PROJECT_ID'
  ]
images:
- 'gcr.io/$PROJECT_ID/realtime-ai-streamer:${_BUILD_TAG}'

# Define substitution variables
substitutions:
  _GEMINI_API_KEY: "" # This will be overridden by the trigger or gcloud command
  _BUILD_TAG: "latest"